{"version":3,"sources":["../src/main.js"],"names":["PanelCtrl","moment","axios","go","_","panelDefaults","host","port","application","user","password","myFullDiagram","setupDiagramTimer","AC2Ctrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","window","goSamples","$","GraphObject","make","div","Diagram","initialAutoScale","UniformToFill","maxScale","contentAlignment","Spot","Center","layout","TreeLayout","angle","sorting","SortingAscending","maxSelectionCount","myNodeTemplate","Node","locationSpot","locationObjectName","Binding","toString","Shape","desiredSize","Size","name","portId","stroke","TextBlock","margin","nodeTemplate","groupTemplate","Group","fill","Panel","defaultAlignment","alignment","font","Placeholder","padding","linkTemplate","Link","toShortLength","strokeWidth","toArrow","toolTip","Adornment","clearInterval","setInterval","setupDiagram","urlBase","method","url","data","headers","then","get","response","console","log","nodeDataArray","groups","forEach","indexOf","component","GroupName","push","node","key","Name","stateColor","color","State","Parents","length","parent","model","TreeModel","catch","error","addEditorTab","initDiagram","templateUrl"],"mappings":"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","file":"main.js","sourcesContent":["import { PanelCtrl } from 'app/plugins/sdk';\r\nimport moment from 'moment';\r\nimport axios from './external/axios.min.js';\r\nimport go from './external/go.js';\r\nimport _ from 'lodash';\r\nimport './css/panel.css!';\r\n\r\nconst panelDefaults = {\r\n  host: \"localhost\",\r\n  port: \"7890\",\r\n  application: \"Servers,1.0.0\",\r\n  user: \"admin\",\r\n  password: \"admin\"\r\n};\r\n\r\nlet myFullDiagram = {}, setupDiagramTimer = null;\r\n\r\nexport class AC2Ctrl extends PanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  initDiagram() {\r\n    if (window.goSamples) goSamples();\r\n    const $ = go.GraphObject.make;\r\n    myFullDiagram.div = null;\r\n    myFullDiagram =\r\n      $(go.Diagram, \"full\",\r\n        {\r\n          initialAutoScale: go.Diagram.UniformToFill,\r\n          maxScale: 1,\r\n          contentAlignment: go.Spot.Center,\r\n          \"animationManager.isEnabled\": false,\r\n          layout: $(go.TreeLayout,\r\n            { angle: 90, sorting: go.TreeLayout.SortingAscending }),\r\n          maxSelectionCount: 1\r\n        });\r\n\r\n    const myNodeTemplate =\r\n      $(go.Node, \"Vertical\",\r\n        { locationSpot: go.Spot.Center, locationObjectName: \"SHAPE\" },\r\n        new go.Binding(\"text\", \"key\", go.Binding.toString),\r\n        $(go.Shape, \"Rectangle\", { desiredSize: new go.Size(30, 30), name: \"SHAPE\", portId: \"\" },\r\n          new go.Binding(\"fill\", \"color\"),\r\n          { stroke: null }),\r\n        $(go.TextBlock, { margin: 5, stroke: \"rgb(220,220,220)\" }, new go.Binding(\"text\", \"key\"))\r\n      );\r\n    myFullDiagram.nodeTemplate = myNodeTemplate;\r\n\r\n    const groupTemplate =\r\n      $(go.Group, \"Auto\",\r\n        $(go.Shape, \"Rectangle\",\r\n          { fill: \"gray\" }),\r\n        $(go.Panel, \"Vertical\",\r\n          {\r\n            margin: 5,\r\n            defaultAlignment: go.Spot.Center\r\n          },\r\n          $(go.TextBlock, { alignment: go.Spot.Center, font: \"Bold 12pt Sans-Serif\" }),\r\n          $(go.Placeholder), { padding: 5 }\r\n        )\r\n      );\r\n    myFullDiagram.groupTemplate = groupTemplate;\r\n\r\n    myFullDiagram.linkTemplate =\r\n      $(go.Link,\r\n        { toShortLength: 1 },\r\n        $(go.Shape,\r\n          { strokeWidth: 1, \"stroke\": \"gray\" }),\r\n        $(go.Shape,\r\n          { toArrow: \"Standard\", stroke: null, fill: \"gray\" }),\r\n        {\r\n          toolTip:\r\n            $(go.Adornment, \"Auto\",\r\n              $(go.Shape, { fill: \"#FFFFCC\" }),\r\n              $(go.TextBlock, { margin: 1 })\r\n            )\r\n        }\r\n      );\r\n\r\n    clearInterval(setupDiagramTimer);\r\n    setupDiagramTimer = setInterval((() => {\r\n      this.setupDiagram();\r\n    }).bind(this), 5000);\r\n    this.setupDiagram();\r\n  }\r\n\r\n  setupDiagram() {\r\n    const urlBase = `http://${this.panel.host}:${this.panel.port}`;\r\n    axios({\r\n      method: 'POST',\r\n      url: `${urlBase}/api/Token`,\r\n      data: {\r\n        \"User\": this.panel.user,\r\n        \"Password\": this.panel.password\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n    })\r\n      .then(response => {\r\n        return axios.get(`${urlBase}/api/Application?application=${this.panel.application}&api_key=${response.data}`);\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const nodeDataArray = [];\r\n        const groups = [];\r\n        response.data.forEach(component => {\r\n          if (groups.indexOf(component.GroupName) === -1) {\r\n            groups.push(component.GroupName);\r\n          }\r\n          const node = {};\r\n          node.key = component.Name;\r\n          const stateColor = {\r\n            \"Stopped\": \"red\",\r\n            \"Started\": \"green\",\r\n            \"InError\": \"gray\",\r\n            \"Starting\": \"Orange\",\r\n          };\r\n          node.color = stateColor[component.State];\r\n          if (component.Parents.length > 0) {\r\n            node.parent = component.Parents[0];\r\n          }\r\n          nodeDataArray.push(node);\r\n        });\r\n        myFullDiagram.model = new go.TreeModel(nodeDataArray);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Settings', 'public/plugins/grafana-ac2-panel/settings.html', 2);\r\n  }\r\n\r\n  onClick() {\r\n    this.initDiagram();\r\n  }\r\n\r\n}\r\n\r\nAC2Ctrl.templateUrl = 'module.html';"]}